{"version":3,"sources":["components/Filter.js","components/Person.js","components/PersonForm.js","components/Notification.js","services/index.js","App.js","index.js"],"names":["Filter","onChangeFilterHandler","console","log","useState","filterValue","setFilterValue","onChange","event","target","value","Person","id","name","number","onClickDeleteHandler","onClick","PersonForm","onSubmitHandler","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","type","NotificationColorTypes","ERROR","SUCCESS","Notification","message","notificationStyle","color","colorType","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","PERSONS_URL","App","persons","setPersons","notification","setNotification","useEffect","Promise","resolve","reject","fetch","then","response","status","json","catch","error","data","setTimeout","personID","window","confirm","method","headers","args","filter","e","personsToShow","person","toLowerCase","includes","isPersonRepeat","find","body","JSON","stringify","map","createNewPerson","concat","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a3b71e1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Filter = ({ onChangeFilterHandler }) => {\r\n  console.log({ onChangeFilterHandler });\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n\r\n  const handlerOnChange = (event) => {\r\n    console.log(event.target.value);\r\n    setFilterValue(event.target.value);\r\n    onChangeFilterHandler(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <strong>Filter show by: </strong>\r\n      <input onChange={handlerOnChange} value={filterValue} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Person = ({ id, name, number, onClickDeleteHandler }) => {\r\n  console.log(name, number);\r\n\r\n  return (\r\n    <li>\r\n      {name} {number}{\" \"}\r\n      <button\r\n        onClick={() => {\r\n          onClickDeleteHandler({ id, name });\r\n        }}\r\n      >\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React, { useState } from \"react\";\r\n\r\nconst PersonForm = ({ onSubmitHandler }) => {\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n\r\n  const handleOnChangeName = (event) => {\r\n    console.log(event.target.value);\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleOnChangeNumber = (event) => {\r\n    console.log(event.target.value);\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const hanfleOnSumbit = (event) => {\r\n    event.preventDefault();\r\n    let newPerson = { name: newName, number: newNumber };\r\n    onSubmitHandler(newPerson);\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={hanfleOnSumbit}>\r\n      <div>\r\n        name: <input onChange={handleOnChangeName} value={newName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={handleOnChangeNumber} value={newNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","const NotificationColorTypes = {\r\n  ERROR: \"red\",\r\n  SUCCESS: \"green\",\r\n};\r\nconst Notification = ({ message, colorType }) => {\r\n  let notificationStyle = {\r\n    color: colorType,\r\n    background: \"lightgrey\",\r\n    fontSize: \"20\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: \"5\",\r\n    padding: \"10\",\r\n    marginBottom: \"10\",\r\n  };\r\n\r\n  if (!message) {\r\n    return null;\r\n  }\r\n\r\n  return <div style={notificationStyle}>{message}</div>;\r\n};\r\n\r\nexport { Notification, NotificationColorTypes };\r\n","const PERSONS_URL = \"/api/persons\";//podria ser relativo, ya que estan en el mismo lugar\r\n\r\nfunction createNewPerson(data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(PERSONS_URL, {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n}\r\n\r\nfunction deletePerson(personID) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(PERSONS_URL + `/${personID}`, {\r\n      method: \"DELETE\", // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status < 400) {\r\n          resolve(true);\r\n        } else {\r\n          reject(response);\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n}\r\n\r\nfunction getPersons() {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(PERSONS_URL)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          resolve(response.json());\r\n        } else {\r\n          resolve(reject(response));\r\n        }\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n}\r\n\r\nfunction updatePerson(data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(PERSONS_URL + `/${data.id}`, {\r\n      method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n    })\r\n      .then((response) => {\r\n        resolve(response.json());\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n}\r\n\r\nexport { createNewPerson, deletePerson, getPersons, updatePerson };\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Person from \"./components/Person\";\nimport PersonForm from \"./components/PersonForm\";\nimport {\n  Notification,\n  NotificationColorTypes,\n} from \"./components/Notification\";\nimport {\n  createNewPerson,\n  deletePerson,\n  getPersons,\n  updatePerson,\n} from \"./services/index\";\nimport \"./index.css\";\n\nconst App = () => {\n  console.log({ NotificationColorTypes });\n  const [persons, setPersons] = useState([]);\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [notification, setNotification] = useState({});\n\n  const hookGetData = () => {\n    const promise = getPersons();\n    promise.then((data) => {\n      setPersons(data);\n    });\n  };\n  useEffect(hookGetData, []);\n\n  const cleanNotification = () => {\n    if (!notification.message) return;\n    setTimeout(() => setNotification({ message: \"\" }), 3500);\n  };\n  useEffect(cleanNotification, [notification]);\n\n  const onChangeFilterPersonValue = (value) => {\n    setFilterValue(value);\n  };\n  const onSubmitPersonForm = ({ name, number }) => {\n    let isPersonRepeat = persons.find((e) => e.name === name);\n    if (isPersonRepeat) {\n      const confirmUpdate = window.confirm(`Actualizar a ${name}`);\n      if (confirmUpdate) {\n        updatePerson({ ...isPersonRepeat, number }).then((data) => {\n          setPersons(\n            persons.map((person) => (person.name !== name ? person : data))\n          );\n          setNotification({\n            message: `${name} fue actualizado correctamente`,\n            colorType: NotificationColorTypes.SUCCESS,\n          });\n        });\n      }\n    } else {\n      \n      createNewPerson({ name, number })\n        .then(() => {\n          debugger\n          setPersons(persons.concat({ name, number }));\n          setNotification({\n            message: `${name} fue agregado correctamente`,\n            colorType: NotificationColorTypes.SUCCESS,\n          });\n        })\n        .catch((error) => {\n          debugger;\n        });\n    }\n  };\n  const onClickDeleteHandler = ({ id, name }) => {\n    const confirmDelete = window.confirm(`Borrar a ${name}`);\n    if (confirmDelete) {\n      deletePerson(id).catch((args) => {\n        console.error(args);\n        setNotification({\n          message: `${name} ya se encontraba eliminado`,\n          colorType: NotificationColorTypes.ERROR,\n        });\n      });\n      setPersons(persons.filter((e) => e.id !== id));\n    }\n  };\n  const personsToShow = !filterValue\n    ? persons\n    : persons.filter((person) =>\n        person.name.toLowerCase().includes(filterValue)\n      );\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Filter onChangeFilterHandler={onChangeFilterPersonValue}></Filter>\n      <h2>Add new</h2>\n      <Notification\n        message={notification.message}\n        colorType={notification.colorType}\n      ></Notification>\n      <PersonForm onSubmitHandler={onSubmitPersonForm}></PersonForm>\n      <h2>Numbers</h2>\n      <ul>\n        {personsToShow.map((p) => (\n          <Person\n            key={p.id}\n            onClickDeleteHandler={onClickDeleteHandler}\n            {...p}\n          ></Person>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}